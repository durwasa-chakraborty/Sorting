import os
import random
import time

class Sorting:

    def __init__(self):
        return None

    def timeit(method):
        def running_time(*args,**kwargs):
            start_time = time.time()
            result = method(*args,**kwargs)
            end_time = time.time()
            print '%r %2.2f ms' % (method.__name__,(end_time-start_time)* 1000)
        return running_time

    @timeit
    def bubble_sort(self,list):
        for i in range(len(list)):
            for j in range(0,len(list)-i-1):
                if(list[j] > list[j+1]):
                    list[j],list[j+1] = list[j+1],list[j]
        return list
    
    @timeit
    def selection_sort(self,list):
        for i in range(1,len(list)):
            key = list[i]
            j = i-1
            while(j >= 0 and list[j] > key):
                list[j+1] = list[j]
                j=j-1
            list[j+1] = key
        return list

    @timeit
    def insertion_sort(self,list):
        i = 0
        while(i < len(list)):
            j = i
            while(j > 0 and (list[j-1] > list[j])):
                list[j],list[j-1] = list[j-1],list[j]
                j = j - 1
            i = i + 1
        return list



if __name__ == "__main__":
    obj = Sorting()
    input_list = random.sample(xrange(0,100000),1000)
    obj.selection_sort(input_list)
    obj.bubble_sort(input_list)
    obj.insertion_sort(input_list)
    
